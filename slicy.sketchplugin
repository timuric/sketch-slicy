var artboards = [[doc currentPage] artboards];
var sketchDoc = sketch.doc.fileURL().path();
var assetsFolder = sketchDoc.replace(".sketch","") + ".assets/";
var layerNames = [];
var uniqueNames = [];
layers = doc.currentPage().layers();


function exportLayer(layer,path){
  var rect = [layer rectByAccountingForStyleSize:[[layer absoluteRect] rect]];
  var slice = [[MSSliceMaker slicesFromExportableLayer:layer inRect:rect] firstObject];  
  [doc saveArtboardOrSlice: slice toFile: path];
}
function eachArray(list,callback){
  for(var i=0, l = [list count]; i<l; i++){
    callback(list.objectAtIndex(i),i);
  }
}

//
[[NSFileManager defaultManager] removeItemAtPath:assetsFolder error:nil];

//Create unique names
eachArray(layers,function(layer){
  var match = 0;
  var layerName = layer.name().replace(/\..+$/,"");
  layerName = layerName.replace(" ","-");
  layerNames.push(layerName);  
  layerNames.forEach(function(existingName){
    if(layerName === existingName){
      match += 1;
    }
  })
  match > 0 ? uniqueNames.push(layerName+"-"+match) :  uniqueNames.push(layerName);
})

eachArray(layers,function(layer,i){  
	var layerName = layer.name();
  var extension = layerName.substr(layerName.length() - 4)
	if( (extension.match(/\.png/) || extension.match(/\.jpg/)) && layer.isVisible() === 1){
    var path = assetsFolder + uniqueNames[i] + extension;    
		exportLayer(layer, path)
	}
});
